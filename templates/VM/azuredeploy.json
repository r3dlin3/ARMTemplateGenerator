{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
           "type": "string",
           "metadata": {
                "description": "Name of the VM"
            }
        },
        {{#if hasPublicIP}}
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "[toLower(parameters('vmName'))]",
            "metadata": {
                "description": "Unique DNS Name for the Virtual Machine"
            }
        },
        "publicIPAddressName": {
            "type": "string",
            "metadata": {
                "description": "Name of the public IP address"
            }
        },
        {{/if}}
        {{#is privateIPtype "Static"}}
        "privateIP": {
           "type": "string",
           "metadata": {
                "description": "Static private IP"
            }
        },
        {{/is}}
        "virtualNetworkName": {
           "type": "string",
           "metadata": {
                "description": "Name of the new or existing VNET"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                 "description": "Name of the new or existing subnet"
             }
         },
        {{#if existingVNET}}
        "virtualNetworkResourceGroupName": {
            "type": "string",
            "metadata": {
                 "description": "Resource group of the new or existing VNET"
             }
         },
        {{/if}}
        {{#unless existingVNET}}
        "vnetPrefix": {
           "type": "string",
           "metadata": {
                "description": ""
            }
        },
        {{#unless existingSubnet}}
        "subnetPrefix": {
            "type": "string",
            "metadata": {
                 "description": ""
             }
        },
        {{/unless}}
        {{/unless}}       
        {{#if remoteAccess}}
        "networkSecurityGroupName": {
            "type": "string",
            "metadata": {
                "description": "Name of the NSG for remote Access"
            }
        },
        {{/if}}
        "nicName": {
            "type": "string",
            "metadata": {
                "description": "Name of the NIC"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The region to deploy the resources into"
            }
        },      
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2",
            "allowedValues": [
                "Standard_B1ls", "Standard_B1ms", "Standard_B1s", "Standard_B2ms",
                "Standard_B2s", "Standard_B4ms", "Standard_B8ms", "Standard_B12ms",
                "Standard_B16ms", "Standard_B20ms", "Standard_D1_v2", "Standard_D2_v2",
                "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2", "Standard_D11_v2",
                "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2", "Standard_D15_v2",
                "Standard_F1", "Standard_F2", "Standard_F4", "Standard_F8", "Standard_F16",
                "Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2",
                "Standard_DS5_v2", "Standard_DS11-1_v2", "Standard_DS11_v2", "Standard_DS12-1_v2",
                "Standard_DS12-2_v2", "Standard_DS12_v2", "Standard_DS13-2_v2", "Standard_DS13-4_v2",
                "Standard_DS13_v2", "Standard_DS14-4_v2", "Standard_DS14-8_v2", "Standard_DS14_v2",
                "Standard_DS15_v2", "Standard_F1s", "Standard_F2s", "Standard_F4s", "Standard_F8s",
                "Standard_F16s", "Standard_A1_v2", "Standard_A2m_v2", "Standard_A2_v2",
                "Standard_A4m_v2", "Standard_A4_v2", "Standard_A8m_v2", "Standard_A8_v2",
                "Standard_D2_v3", "Standard_D4_v3", "Standard_D8_v3", "Standard_D16_v3",
                "Standard_D32_v3", "Standard_D48_v3", "Standard_D64_v3", "Standard_D2s_v3",
                "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3",
                "Standard_D48s_v3", "Standard_D64s_v3", "Standard_E2_v3", "Standard_E4_v3",
                "Standard_E8_v3", "Standard_E16_v3", "Standard_E20_v3", "Standard_E32_v3",
                "Standard_E2s_v3", "Standard_E4-2s_v3", "Standard_E4s_v3", "Standard_E8-2s_v3",
                "Standard_E8-4s_v3", "Standard_E8s_v3", "Standard_E16-4s_v3", "Standard_E16-8s_v3",
                "Standard_E16s_v3", "Standard_E20s_v3", "Standard_E32-8s_v3", "Standard_E32-16s_v3",
                "Standard_E32s_v3", "Standard_M8-2ms", "Standard_M8-4ms", "Standard_M8ms",
                "Standard_M16-4ms", "Standard_M16-8ms", "Standard_M16ms", "Standard_M32-8ms",
                "Standard_M32-16ms", "Standard_M32ls", "Standard_M32ms", "Standard_M32ts",
                "Standard_M64-16ms", "Standard_M64-32ms", "Standard_M64ls", "Standard_M64ms",
                "Standard_M64s", "Standard_M128-32ms", "Standard_M128-64ms", "Standard_M128ms",
                "Standard_M128s", "Standard_M64", "Standard_M64m", "Standard_M128",
                "Standard_M128m", "Standard_A0", "Standard_A1", "Standard_A2",
                "Standard_A3", "Standard_A5", "Standard_A4", "Standard_A6",
                "Standard_A7", "Basic_A0", "Basic_A1", "Basic_A2", "Basic_A3",
                "Basic_A4", "Standard_D1", "Standard_D2", "Standard_D3",
                "Standard_D4", "Standard_D11", "Standard_D12", "Standard_D13",
                "Standard_D14", "Standard_DS1", "Standard_DS2", "Standard_DS3",
                "Standard_DS4", "Standard_DS11", "Standard_DS12", "Standard_DS13",
                "Standard_DS14", "Standard_HB120rs_v2", "Standard_PB6s", "Standard_NC6s_v3",
                "Standard_NC12s_v3", "Standard_NC24rs_v3", "Standard_NC24s_v3", "Standard_E48_v3",
                "Standard_E64i_v3", "Standard_E64_v3", "Standard_E48s_v3", "Standard_E64-16s_v3",
                "Standard_E64-32s_v3", "Standard_E64is_v3", "Standard_E64s_v3", "Standard_HB60rs",
                "Standard_E2_v4", "Standard_E4_v4", "Standard_E8_v4", "Standard_E16_v4",
                "Standard_E20_v4", "Standard_E32_v4", "Standard_E48_v4", "Standard_E64_v4",
                "Standard_E2d_v4", "Standard_E4d_v4", "Standard_E8d_v4", "Standard_E16d_v4",
                "Standard_E20d_v4", "Standard_E32d_v4", "Standard_E48d_v4", "Standard_E64d_v4",
                "Standard_E2s_v4", "Standard_E4-2s_v4", "Standard_E4s_v4", "Standard_E8-2s_v4",
                "Standard_E8-4s_v4", "Standard_E8s_v4", "Standard_E16-4s_v4", "Standard_E16-8s_v4",
                "Standard_E16s_v4", "Standard_E20s_v4", "Standard_E32-8s_v4", "Standard_E32-16s_v4",
                "Standard_E32s_v4", "Standard_E48s_v4", "Standard_E64-16s_v4", "Standard_E64-32s_v4",
                "Standard_E64s_v4", "Standard_E80is_v4", "Standard_E2ds_v4", "Standard_E4-2ds_v4",
                "Standard_E4ds_v4", "Standard_E8-2ds_v4", "Standard_E8-4ds_v4", "Standard_E8ds_v4",
                "Standard_E16-4ds_v4", "Standard_E16-8ds_v4", "Standard_E16ds_v4", "Standard_E20ds_v4",
                "Standard_E32-8ds_v4", "Standard_E32-16ds_v4", "Standard_E32ds_v4", "Standard_E48ds_v4",
                "Standard_E64-16ds_v4", "Standard_E64-32ds_v4", "Standard_E64ds_v4", "Standard_E80ids_v4",
                "Standard_D2d_v4", "Standard_D4d_v4", "Standard_D8d_v4", "Standard_D16d_v4", "Standard_D32d_v4",
                "Standard_D48d_v4", "Standard_D64d_v4", "Standard_D2_v4", "Standard_D4_v4", "Standard_D8_v4",
                "Standard_D16_v4", "Standard_D32_v4", "Standard_D48_v4", "Standard_D64_v4", "Standard_D2ds_v4",
                "Standard_D4ds_v4", "Standard_D8ds_v4", "Standard_D16ds_v4", "Standard_D32ds_v4",
                "Standard_D48ds_v4", "Standard_D64ds_v4", "Standard_D2s_v4", "Standard_D4s_v4",
                "Standard_D8s_v4", "Standard_D16s_v4", "Standard_D32s_v4", "Standard_D48s_v4",
                "Standard_D64s_v4", "Standard_F2s_v2", "Standard_F4s_v2", "Standard_F8s_v2",
                "Standard_F16s_v2", "Standard_F32s_v2", "Standard_F48s_v2", "Standard_F64s_v2",
                "Standard_F72s_v2", "Standard_D2a_v4", "Standard_D4a_v4", "Standard_D8a_v4",
                "Standard_D16a_v4", "Standard_D32a_v4", "Standard_D48a_v4", "Standard_D64a_v4",
                "Standard_D96a_v4", "Standard_D2as_v4", "Standard_D4as_v4", "Standard_D8as_v4",
                "Standard_D16as_v4", "Standard_D32as_v4", "Standard_D48as_v4", "Standard_D64as_v4",
                "Standard_D96as_v4", "Standard_E2a_v4", "Standard_E4a_v4", "Standard_E8a_v4",
                "Standard_E16a_v4", "Standard_E20a_v4", "Standard_E32a_v4", "Standard_E48a_v4",
                "Standard_E64a_v4", "Standard_E96a_v4", "Standard_E2as_v4", "Standard_E4-2as_v4",
                "Standard_E4as_v4", "Standard_E8-2as_v4", "Standard_E8-4as_v4", "Standard_E8as_v4",
                "Standard_E16-4as_v4", "Standard_E16-8as_v4", "Standard_E16as_v4", "Standard_E20as_v4",
                "Standard_E32-8as_v4", "Standard_E32-16as_v4", "Standard_E32as_v4", "Standard_E48as_v4",
                "Standard_E64-16as_v4", "Standard_E64-32as_v4", "Standard_E64as_v4", "Standard_E96-24as_v4",
                "Standard_E96-48as_v4", "Standard_E96as_v4", "Standard_NV6", "Standard_NV12", "Standard_NV24",
                "Standard_NV6s_v2", "Standard_NV12s_v2", "Standard_NV24s_v2", "Standard_NV12s_v3",
                "Standard_NV24s_v3", "Standard_NV48s_v3", "Standard_L8s_v2", "Standard_L16s_v2",
                "Standard_L32s_v2", "Standard_L48s_v2", "Standard_L64s_v2", "Standard_L80s_v2",
                "Standard_M32ms_v2", "Standard_M64ms_v2", "Standard_M64s_v2", "Standard_M128ms_v2",
                "Standard_M128s_v2", "Standard_M192ims_v2", "Standard_M192is_v2", "Standard_M192ms_v2",
                "Standard_M32dms_v2", "Standard_M64dms_v2", "Standard_M64ds_v2", "Standard_M128dms_v2",
                "Standard_M128ds_v2", "Standard_M192idms_v2", "Standard_M192ids_v2", "Standard_NV4as_v4",
                "Standard_NV8as_v4", "Standard_NV16as_v4", "Standard_NV32as_v4", "Standard_NC6",
                "Standard_NC12", "Standard_NC24", "Standard_NC24r", "Standard_H8", "Standard_H16",
                "Standard_H8m", "Standard_H16m", "Standard_H16r", "Standard_H16mr", "Standard_G1",
                "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5", "Standard_GS1",
                "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS4-4", "Standard_GS4-8",
                "Standard_GS5", "Standard_GS5-8", "Standard_GS5-16", "Standard_L4s", "Standard_L8s",
                "Standard_L16s", "Standard_L32s", "Standard_ND6s", "Standard_ND12s", "Standard_ND24rs",
                "Standard_ND24s", "Standard_DC8_v2", "Standard_DC1s_v2", "Standard_DC2s_v2",
                "Standard_DC4s_v2", "Standard_NC4as_T4_v3", "Standard_NC8as_T4_v3", "Standard_NC16as_T4_v3",
                "Standard_NC64as_T4_v3", "Standard_ND40rs_v2", "Standard_M208ms_v2", "Standard_M208s_v2",
                "Standard_M416-208s_v2", "Standard_M416s_v2", "Standard_M416-208ms_v2", "Standard_M416ms_v2",
                "Standard_HC44rs", "Standard_DC2s", "Standard_DC4s", "Standard_NP10s", "Standard_NP20s",
                "Standard_NP40s", "Standard_NC6s_v2", "Standard_NC12s_v2", "Standard_NC24rs_v2",
                "Standard_NC24s_v2", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11"
              ],
            "metadata": {
                "description": "Size of VM"
            }
        },
        "managedDiskStorageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS", "Premium_LRS", "StandardSSD_LRS", "UltraSSD_LRS"
            ],
            "defaultValue": "Premium_LRS",
            "metadata": {
                "description": "Storage account type for the managed disk. Supported storage type depends on VM serie. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk."
            }
        },
        {{#is nbDataDisk 0}}
        "diskName": {
            "type": "string",
            "metadata": {
                "description": "Name for OS disk"
            }
        },
        {{/is}}
        {{#isnot nbDataDisk 0}}
        "diskNames": {
            "type": "array",
            "metadata": {
                "description": "Names for each disk, including OS disk"
            }
        },
        "sizeOfEachDataDiskInGB": {
            "type": "string",
            "metadata": {
                "description": "Size of each data disk in GB"
            }
        },
        {{/isnot}}
        {{#is osPublisher 'CustomImage'}}
        "imageName": {
            "type": "string",
            "metadata": {
                "description": "Name of the custom image"
            }
        },
        "imageNameResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Resource group of the custom image"
            }
        },
        {{/is}}
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        {{#if hasAutoShutdown}}
        "autoShutdownName": {
            "type": "string",
            "defaultValue": "[concat('shutdown-computevm-',parameters('vmName'))]",
            "metadata": {
                "description": "Name of the schedules resource"
            }
        },
        "autoShutdownDailyRecurrence": {
            "type": "string",
            "metadata": {
                "description": "The daily recurrence"
            }
        },
        "autoShutdownTimezone": {
            "type": "string",
            "allowedValues": [
                "Romance Standard Time",
                "Pacific Standard time"
            ],
            "metadata": {
                "description": "The daily recurrence"
            }
        },
        {{/if}}
        {{#if isDiagnosticsEnabled}}
        "storageName": {
            "type": "string",
            "metadata": {
                "description": "Storage account for VM diagnostics."
            }
        },
        {{#if existingStorage}}
        "storageAccountResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The resource group of the existing storage account."
            }
        },
        {{/if}}
        {{#unless existingStorage}}
        "storageAccountType": {
            "type": "string",
            "allowedValues": ["Standard_LRS", "Standard_GRS", "Premium_LRS", "Standard_RAGRS", "Standard_ZRS"],
            "metadata": {
                "description": "Type of storage account for VM diagnostics."
            }
        },
        {{/unless}}
        {{/if}}
        {{#if isADJoined}}
        "domainToJoin": {
            "type": "string",
            "metadata": {
              "description": "The FQDN of the AD domain"
            }
        },
        "domainJoinUserName": {
            "type": "string",
            "metadata": {
                "description": "Username of the account on the domain"
            }
        },
        "domainJoinUserPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password of the account on the domain"
            }
        },
        "ouPath": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU,DC=domain,DC=Domain,DC=com"
            }
        },
        "domainJoinOptions": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
            }
        },
        {{/if}}
        {{#if backup}}
        "backupVaultName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Existing Backup Vault"
            }
        },
          "backupVaultResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource group of the new or existing Backup Vault"
            }
        },
          "backupPolicyName": {
            "type": "string",
            "metadata": {
                "description": "Name of existing Backup Policy in the Backup Vault."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": ""
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": ""
            }
        },
        {{/if}}
        {{#each extensions}}
        {{#is extensionType "Generic"}}
        {{/is}}
        {{#is extensionType "CustomScript"}}
        "scriptURL": {
            "type": "string",
            "metadata": {
                "description": "URL of the script for the custom script extension"
            }
        },
        "scriptPath": {
            "type": "string",
            "defaultValue": "[concat('./',substring(parameters('scriptURL'),lastIndexOf(parameters('scriptURL'),'/')))]",
            "metadata": {
                "description": "Path of the script to execute"
            }
        },
        {{/is}}
        {{#is extensionType "DSC"}}
        {{#if onboardAzureAutomation}}
        "automationAccountName": {
            "type": "string",
            "metadata": {
                "description": "Automation Account used by the DSC Extension"
            }
        },
        "automationResourceGroupName": {
            "type": "string",
            "default" : "[resourceGroup().name]",
            "metadata": {
                "description": "Automation Account used by the DSC Extension"
            }
        },
        "nodeConfigurationName": {
            "type": "string",
            "metadata": {
                "description": "Node configuration Name in the Automation Account"
            }
        },
        {{/if}}
        {{/is}}
        {{/each}}
        "computerName": {
            "type": "string",
            "defaultValue": "[parameters('vmName')]",
            "metadata": {
                 "description": "Name of the VM"
             }
        },
        "tagValues": {
            "type": "object",
            "defaultValue": {}
        }
    },
    "variables": {
        {{#isnot osPublisher 'CustomImage'}}
        "imagePublisher": "{{osPublisher}}",
        "imageOffer": "{{osOffer}}",
        "imageSKU": "{{osSku}}",
        "imageVersion": "latest",
        {{/isnot}}
        {{#if hasPublicIP}}
        "publicIPAddressType": "{{publicIPtype}}",
        {{/if}}
        {{#if existingVNET}}
        "vnetID": "[resourceId(parameters('virtualNetworkResourceGroupName'),'Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        {{else}}
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        {{/if}}
        "subnetID": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
        "apiVersion": "2015-06-15"
    },
    "resources": [
        {{#if hasPublicIP}}
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                }
            }
        },
        {{/if}}
        {{#unless existingVNET}}
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {{/unless}}
        {{#if existingVNET}}
        {{#unless existingSubnet}}
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(parameters('virtualNetworkName'), '/', parameters('subnetName'))]",
            "apiVersion": "2017-10-01",
            "properties": {
                "addressPrefix": "[parameters('subnetPrefix')]"
            }
        },
        {{/unless}}
        {{/if}}
        {{#if remoteAccess}}
        {
            "name": "[parameters('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-remoteaccess",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": {{#is osPublisher "MicrosoftWindowsServer"}}"3389"{{else}}22{{/is}},
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {{/if}}
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                {{#if hasPublicIP}}
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"{{#if remoteAccess}},
                "[parameters('networkSecurityGroupName')]"{{#unless existingVNET}},{{/unless}}
                {{/if}}
                {{/if}}
                {{#unless existingVNET}}
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
                {{/unless}}
                
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "{{privateIPtype}}",
                            {{#is privateIPtype "Static"}}
                            "privateIPAddress": "[parameters('privateIp')]",
                            {{/is}}
                            {{#if hasPublicIP}}
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
                            },
                            {{/if}}
                            "subnet": {
                                "id": "[variables('subnetID')]"
                            }
                        }
                    }
                ]
            }
        },
        {{#if hasAutoShutdown}}
        {
            "type": "microsoft.devtestlab/schedules",
            "name": "[parameters('autoShutdownName')]",
            "apiVersion": "2016-05-15",
            "location": "[parameters('location')]",
            "properties": {
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[parameters('autoShutdownDailyRecurrence')]"
                },
                "timeZoneId": "[parameters('autoShutdownTimezone')]",
                "notificationSettings": {
                    "status": "Disabled",
                    "timeInMinutes": 30
                },
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            ]
        },
        {{/if}}
        {{#if isDiagnosticsEnabled}}
        {{#unless existingStorage}}
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageName')]",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[parameters('storageAccountType')]"
            }
        },
        {{/unless}}
        {{/if}}
        {{#if isADJoined}}
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'),'/joindomain')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Name": "[parameters('domainToJoin')]",
                    "OUPath": "[parameters('ouPath')]",
                    "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainJoinUserName'))]",
                    "Restart": "true",
                    "Options": "[parameters('domainJoinOptions')]"
                },
                "protectedSettings": {
                    "Password": "[parameters('domainJoinUserPassword')]"
                }
            }
        },
        {{/if}}
        {
            "apiVersion": "2016-04-30-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                {{#if isDiagnosticsEnabled}}
                {{#unless existingStorage}}
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageName'))]",
                {{/unless}}
                {{/if}}
                "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('computerName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    
                    "imageReference": {
                        {{#is osPublisher 'CustomImage'}}
                        "id": "[resourceId(parameters('imageNameResourceGroupName'),'Microsoft.Compute/images', parameters('imageName'))]"
                        {{/is}}
                        {{#isnot osPublisher 'CustomImage'}}
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "[variables('imageVersion')]"
                        {{/isnot}}
                    },
                    "dataDisks": [
                    {{#repeat count=nbDataDisk}}
                        {
                            "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
                            "lun": {{@index}},
                            "name": "[parameters('diskNames')[add(1,{{@index}})]]",
                            "createOption": "Empty",
                            "caching": "ReadOnly",
                            "managedDisk": {
                                "storageAccountType": "[parameters('managedDiskStorageAccountType')]"
                            }
                        }{{#unless @last}},{{/unless}}
                    {{/repeat}}
                    ],
                    "osDisk": {
                        "createOption": "FromImage",
                        {{#is nbDataDisk 0}}
                        "name": "[parameters('diskName')]",
                        {{/is}}
                        {{#isnot nbDataDisk 0}}
                        "name": "[parameters('diskNames')[0]]",
                        {{/isnot}}
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "[parameters('managedDiskStorageAccountType')]"
                        }
                    }
                },
                {{#if isDiagnosticsEnabled}}
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(resourceId({{#if existingStorage}}parameters('storageAccountResourceGroup'),{{/if}}'Microsoft.Storage/storageAccounts/', parameters('storageName')), variables('apiVersion')).primaryEndpoints.blob]"
                    }
                },
                {{/if}}
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('nicName'))]"
                        }
                    ]
                }
            }
        }{{#if backup}},
        {
            "name": "[concat('backup-',parameters('vmName'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('backupVaultResourceGroup')]",
            "apiVersion": "2017-05-10",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'))]"
            ],
            "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "[concat(parameters('_artifactsLocation'), 'Nested/backup.json', parameters('_artifactsLocationSasToken'))]",
                "contentVersion": "1.0.0.0"
              },
              "parameters": {
                "virtualMachineResourceGroup": {
                    "value": "[resourceGroup().name]"
                },
                "virtualMachineName": {
                    "value": "[parameters('vmName')]"
                },
                "existingRecoveryServicesVault": {
                  "value": "[parameters('backupVaultName')]"
                },
                "existingBackupPolicy": {
                  "value": "[parameters('backupPolicyName')]"
                }
              }
            }
        }{{/if}}{{#each extensions}},
        {{#is extensionType "Generic"}}
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'),'/', '{{extensionType}}{{@index}}')]",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties": {
              "publisher": "",
              "type": "",
              "typeHandlerVersion": "",
              "autoUpgradeMinorVersion": true,
              "settings": null,
              "protectedSettings": null
            }
        }
        {{/is}}
        {{#is extensionType "CustomScript"}}
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'),'/', '{{extensionType}}{{@index}}')]",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[parameters('scriptURL')]"
                    ],
                    "timestamp":123456789
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', parameters('scriptPath'))]",
                    "storageAccountName": "myStorageAccountName",
                    "storageAccountKey": "myStorageAccountKey"
                }
            }
        }
        {{/is}}
        {{#is extensionType "DSC"}}
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'),'/', '{{extensionType}}{{@index}}')]",
            "apiVersion": "2018-06-30",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.77",
                "autoUpgradeMinorVersion": true,
                {{#if onboardAzureAutomation}}
                "protectedSettings": {
                    "Items": {
                        "registrationKeyPrivate": "[listKeys(resourceId(parameters('automationResourceGroupName'),'Microsoft.Automation/automationAccounts/', parameters('automationAccountName')), '2018-06-30').Keys[0].value]"
                    }
                },
                "settings": {
                    "Properties": [
                        {
                            "Name": "RegistrationKey",
                            "Value": {
                                "UserName": "PLACEHOLDER_DONOTUSE",
                                "Password": "PrivateSettingsRef:registrationKeyPrivate"
                            },
                            "TypeName": "System.Management.Automation.PSCredential"
                        },
                        {
                            "Name": "RegistrationUrl",
                            "Value": "[reference(parameters('automationResourceGroupName'),concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))).registrationUrl]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "NodeConfigurationName",
                            "Value": "[parameters('nodeConfigurationName')]",
                            "TypeName": "System.String"
                        }
                    ]
                }
                {{else}}
                "settings": {
                    "wmfVersion": "latest",
                    "configuration": {
                        "url": "http://validURLToConfigLocation",
                        "script": "ConfigurationScript.ps1",
                        "function": "ConfigurationFunction"
                    },
                    "configurationArguments": {
                        "argument1": "Value1",
                        "argument2": "Value2"
                    },
                    "configurationData": {
                        "url": "https://foo.psd1"
                    },
                    "privacy": {
                        "dataCollection": "Disable"
                    }
                },
                "protectedSettings": {
                    "configurationArguments": {
                        "parameterOfTypePSCredential1": {
                            "userName": "UsernameValue1",
                            "password": "PasswordValue1"
                        },
                        "parameterOfTypePSCredential2": {
                            "userName": "UsernameValue2",
                            "password": "PasswordValue2"
                        }
                    },
                    "configurationUrlSasToken": "?g!bber1sht0k3n",
                    "configurationDataUrlSasToken": "?dataAcC355T0k3N"
                }
                {{/if}}
            }
        }
        {{/is}}
        {{/each}}
    ]
}