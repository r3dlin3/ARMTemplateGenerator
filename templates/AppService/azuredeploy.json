{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "siteName": {
            "type": "string",
            "metadata": {
                "description": "Name of azure web app"
            }
        },
        "appServicePlanName": {
            "type": "string",
            "metadata": {
                "description": "Name of hosting plan"
            }
        },
        {{#if existingASP}}
        "appServicePlanResourceGroupName": {
            "type": "string",
            "defaultValue" : "[[resourceGroup().name]]",
            "metadata": {
                "description": "Name of hosting plan"
            }
        },
        {{else}}
        "skuName": {
            "type": "string",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3"
            ],
            "defaultValue": "F1",
            "metadata": {
                "description": "SKU Name"
            }
        },
        "capacity": {
           "type": "int",
           "defaultValue": 1,
           "metadata": {
                "description": "Current number of instances assigned to the resource."
            }
        },
        {{/if}}
        {{#if createSlot}}
        "environments": {
            "defaultValue": [
              "Dev",
              "QA",
              "UAT",
              "Preview"
            ],
            "type": "array",
            "metadata": {
              "description": "Array with the names for the environment slots"
            },
            "maxLength": 19
          },
        {{/if}}
        {{#if createAppInsights}}
        "appInsightsName": {
            "type": "string",
            "metadata": {
                 "description": "Name of the Application Insights."
             }
         },
        {{/if}}
        {{#if createCDN}}
        "CDNProfileName": {
            "type": "string",
            "metadata": {
                 "description": "Name of the CDN Profile."
             }
         },
        "CDNEndpointName": {
            "type": "string",
            "metadata": {
                 "description": "Name of the CDN Endpoint."
             }
         },
         "CDNSku": {
            "type": "string",
            "allowedValues": [
                "Standard_Verizon", "Premium_Verizon", "Custom_Verizon", "Standard_Akamai", "Standard_ChinaCdn", "Standard_Microsoft", "Premium_ChinaCdn"
            ],
            "metadata": {
                 "description": "Name of the pricing tier."
             }
        },
        {{/if}}
        {{#if createCache}}
        "cacheName": {
            "type": "string",
            "metadata": {
              "description": "Name of Azure Redis Cache."
            }
          },
        "cacheSKUName": {
            "type": "string",
            "allowedValues": [
              "Basic",
              "Standard",
              "Premium"
            ],
            "defaultValue": "Basic",
            "metadata": {
              "description": "The pricing tier of the new Azure Redis Cache."
            }
          },
          "cacheSKUFamily": {
            "type": "string",
            "allowedValues": [
              "C","P"
            ],
            "defaultValue": "C",
            "metadata": {
              "description": "The family for the sku (C = Basic/Standard, P = Premium)."
            }
          },
          "cacheSKUCapacity": {
            "type": "int",
            "allowedValues": [ 0, 1, 2, 3, 4, 5, 6 ],
            "defaultValue": 0,
            "metadata": {
              "description": "The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)"
            }
          },
        {{/if}}{{!-- createCache --}}
        "tags": {
            "type": "object",
            "defaultValue": {}
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The region to deploy the resources into"
            }
        }
    },
    "variables": {
      "apiVersion": "2019-08-01",
      "use32BitWorkerProcess": "[or(equals(parameters('skuName'),'F1'), equals(parameters('skuName'),'D1'))]"{{#if createAppInsights}},
        "AppInsightHiddenLink" : {
            "[concat('hidden-link:', resourceId('Microsoft.Web/sites', parameters('siteName')))]": "Resource"
        }
        {{/if}}
    },
    "resources": [
        {{#unless existingASP}}
        {
            "apiVersion": "[variables('apiVersion')]",
            "name": "[parameters('appServicePlanName')]",
            "kind": "{{kind}}",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('location')]",
            "properties": {
                "name": "[parameters('appServicePlanName')]"
            },
            "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('capacity')]"
            },
            "tags": "[parameters('tags')]"
        },
        {{/unless}}
        {{#if createSlot}}
        {
            "apiVersion": "2016-08-01",
            "type": "Microsoft.Web/sites/slots",
            "name": "[concat(variables('siteName'), '/', parameters('environments')[copyIndex()])]",
            "kind": "app",
            "location": "[parameters('location')]",
            "comments": "This specifies the web app slots.",
            
            "properties": {
              "serverFarmId": "[resourceId({{#if existingASP}}parameters('appServicePlanResourceGroupName'),{{/if}}'Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
            },
            "dependsOn": [
              "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
            ],
            "copy": {
              "name": "webPortalSlot",
              "count": "[length(parameters('environments'))]"
            },
            "tags": "[parameters('tags')]"
          },
          {{/if}}
          {{#if createAppInsights}}
          {
            "apiVersion": "2015-05-01",
            "name": "[parameters('AppInsightsName')]",
            "type": "Microsoft.Insights/components",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[parameters('siteName')]"
            ],
            "kind": "web",
            "tags": "[union(parameters('tags'), variables('AppInsightHiddenLink'))]",
            "properties": {
                "Application_Type": "web",
              "ApplicationId": "[parameters('siteName')]"
            }
          },
          {{/if}}
          {{#if createCDN}}
          {
            "name": "[parameters('CDNProfileName')]",
            "type": "Microsoft.Cdn/profiles",
            "location": "[parameters('location')]",
            "apiVersion": "2016-04-02",
            "tags": "[parameters('tags')]",
            "sku": {
              "name": "[parameters('CDNSku')]"
            },
            "properties": {},
            "resources": [
              {
                "name": "[parameters('CDNEndpointName')]",
                "type": "endpoints",
                "location": "[parameters('location')]",
                "apiVersion": "2016-04-02",
                "dependsOn": [
                  "[parameters('CDNProfileName')]",
                  "[parameters('siteName')]"
                ],
                "properties": {
                  "originHostHeader": "[reference(parameters('siteName')).hostNames[0]]",
                  "isHttpAllowed": true,
                  "isHttpsAllowed": true,
                  "queryStringCachingBehavior": "IgnoreQueryString",
                  "contentTypesToCompress": [
                    "text/plain",
                    "text/html",
                    "text/css",
                    "application/x-javascript",
                    "text/javascript"
                  ],
                  "isCompressionEnabled": true,
                  "origins": [
                    {
                      "name": "origin1",
                      "properties": {
                        "hostName": "[reference(parameters('siteName')).hostNames[0]]"
                      }
                    }
                  ]
                }
              }
            ]
          },
          {{/if}}
          {{#if createCache}}
          {
            "name": "[variables('cacheName')]",
            "type": "Microsoft.Cache/Redis",
            "location": "[parameters('location')]",
            "apiVersion": "2015-08-01",
            "dependsOn": [],
            "tags": {
              "displayName": "cache"
            },
            "properties": {
              "sku": {
                "name": "[parameters('cacheSKUName')]",
                "family": "[parameters('cacheSKUFamily')]",
                "capacity": "[parameters('cacheSKUCapacity')]"
              }
            }
          },
          {{/if}}
          {
            "apiVersion": "[variables('apiVersion')]",
            "name": "[parameters('siteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('location')]",
            "dependsOn": [
                {{#unless existingASP}}
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
                {{/unless}}
            ],
            {{#if enableManagedIdentity}}
            "identity": {
                "type": "SystemAssigned"
            },
            {{/if}}
            "properties": {
                "name": "[parameters('siteName')]",
                "serverFarmId": "[parameters('appServicePlanName')]",
                "httpsOnly": true,
                "siteConfig": {
                  "use32BitWorkerProcess": "[variables('use32BitWorkerProcess')]",
                  "phpVersion": "off",
                  "netFrameworkVersion": "v4.7",
                  "webSocketsEnabled": false,
                  "requestTracingEnabled": true,
                  "detailedErrorLoggingEnabled": true,
                  "httpLoggingEnabled": true,
                  "logsDirectorySizeLimit": 40,
                  "remoteDebuggingEnabled": false,
                  "ftpsState": "Disabled",
                  "defaultDocuments": []
                }
            },
            "resources": [
                {{#if createAppInsights}}
                {
                    "apiVersion": "[variables('apiVersion')]",
                    "name": "[concat(parameters('siteName'),'/Microsoft.ApplicationInsights.AzureWebSites')]",
                    "type": "Microsoft.Web/sites/siteextensions",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
                    ],
                    "properties": {
                        "version": "2.6.5"
                    }
                },
                {{/if}}
                {
                    "apiVersion": "2014-11-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"{{#if createAppInsights}},
                        "[resourceId('Microsoft.Web/sites/siteextensions', parameters('siteName'),'Microsoft.ApplicationInsights.AzureWebSites')]"{{/if}}{{#if createCache}},
                        "[concat('Microsoft.Cache/Redis/', parameters('cacheName'))]"
                        {{/if}}
                    ],
                    "properties": {
                        {{#if createAppInsights}}
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', parameters('appInsightsName'))).InstrumentationKey]",
                        "AppInsights:InstrumentationKey": "[reference(concat('microsoft.insights/components/', parameters('appInsightsName'))).InstrumentationKey]",
                        {{/if}}
                        {{#if createCache}}
                        "CacheConnection": "[concat(variables('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', parameters('cacheName')), '2015-08-01').primaryKey)]",
                        {{/if}}
                        "foo": "bar"
                    }
                }
            ]
        }       
    ],
    "outputs": {
        "defaultHostName": {
          "type": "string",
          "value": "[reference(parameters('siteName'), '2018-02-01').defaultHostName]"
        },
        "possibleOutboundIps": {
            "type": "array",
            "value": "[split(reference(parameters('siteName'), '2018-02-01').possibleOutboundIpAddresses, ',')]"
        }{{#if enableManagedIdentity}},
        "apiObjectId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Web/sites', parameters('siteName')), '2019-08-01', 'full').identity.principalId]"

        },
        "apiTenantId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Web/sites', parameters('siteName')), '2019-08-01', 'full').identity.tenantId]"
        },
        {{/if}}
    }
}